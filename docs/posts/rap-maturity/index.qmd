---
title: "RAP Maturity Framework"
author: "Craig R Shenton"
date: "2022-12-11"
categories: [news]
sidebar: false
image: "nhsd-rap.png"
description: "Quarto Markdown Publishing & RAP Maturity"
page-layout: article
title-block-banner: false
---

## The 'Levels of RAP' Maturity Framework

Developed by [NHS Digital RAP community](https://nhsdigital.github.io/rap-community-of-practice/introduction_to_RAP/levels_of_RAP/).

There are three levels:

1. Baseline - **RAP fundamentals** offering resilience against future change.
2. Silver - **Implementing best practice** by following good analytical and software engineering standards.
3. Gold - **Analysis as a product** to further elevate your analytical work and enhance its reusability to the public.

## Baseline RAP - getting the fundamentals right

In order for a publication to be considered a reproducible analytical pipeline, it must at least meet all of the requirements of Baseline RAP:

- [x] Data produced by code in an open-source language (e.g., Python, R, SQL).
- [x] Code is version controlled (i.e., Git & GitHub).
- [ ] Repository includes a README.md file (or equivalent) that clearly details steps a user must follow to reproduce the code.
- [ ] Code has been peer reviewed (i.e., use PRs and code reviews)
- [x] Code is published in the open and linked to & from accompanying publication (if relevant).

## Silver RAP - implementing best practice

_Meeting all of the above requirements, plus:_

- [ ] Outputs are produced by code with minimal manual intervention.
- [ ] Code is well-documented including user guidance, explanation of code structure & methodology and docstrings for functions.
- [ ] Code is well-organised following standard directory format.
- [ ] Reusable functions and/or classes are used where appropriate.
- [ ] Code adheres to agreed coding standards (e.g., PEP8).
- [ ] Pipeline includes a testing framework (unit tests, back tests).
- [ ] Repository includes package dependency information.
- [ ] Logs are automatically recorded by the pipeline to ensure outputs are as expected.
- [ ] Data is handled and output in a [Tidy data format](https://medium.com/@kimrodrikwa/untidy-data-a90b6e3ebe4c).

## Gold RAP - analysis as a product

_Meeting all of the above requirements, plus:_

- [ ] Code is fully packaged.
- [ ] Repository automatically runs tests etc. via [CI](https://github.com/skills/continuous-integration)/CD or a different integration/deployment tool e.g. [GitHub Actions](https://docs.github.com/en/actions).
- [ ] Process runs based on event-based triggers (e.g., new data in database) or on a schedule.
- [ ] Changes to the RAP are clearly signposted. E.g. a changelog in the package, releases etc. (See gov.uk info on [Semantic Versioning](https://github.com/alphagov/govuk-frontend/blob/main/docs/contributing/versioning.md))

